# This is the development Docker Compose file. For production, use docker-compose.prod.yml as an override.
services:
  pipeline:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: development
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app/src
      - GDAL_DATA=/usr/share/gdal
      - PROJ_LIB=/usr/share/proj
    volumes:
      - ./data/input:/data/input
      - ./data/output:/data/output
      - ./app/logs:/app/logs
      - ./src:/app/src
      - ./tests:/app/tests
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "python3", "-c", "import rasterio; print('Rasterio version:', rasterio.__version__)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - pipeline-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pipeline
      - POSTGRES_USER=pipeline
      - POSTGRES_PASSWORD=pipeline
    volumes:
      - postgis_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pipeline"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pipeline-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pipeline-network

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - pipeline
    networks:
      - pipeline-network

  grafana:
    image: grafana/grafana:10.0.0
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - pipeline-network

volumes:
  postgis_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  pipeline-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16