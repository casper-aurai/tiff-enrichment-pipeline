name: Build and Publish Container Images

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  COMPOSE_BAKE: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    # Login to GitHub Container Registry
    - name: Log into GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY_GHCR }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Login to Docker Hub
    - name: Log into Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY_DOCKERHUB }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    - name: Extract metadata for GitHub Container Registry
      id: meta-ghcr
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for Docker Hub
      id: meta-dockerhub
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    # Build and push Docker image to GitHub Container Registry
    - name: Build and push to GitHub Container Registry
      id: build-and-push-ghcr
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-ghcr.outputs.tags }}
        labels: ${{ steps.meta-ghcr.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Build and push Docker image to Docker Hub
    - name: Build and push to Docker Hub
      id: build-and-push-dockerhub
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-dockerhub.outputs.tags }}
        labels: ${{ steps.meta-dockerhub.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Sign the resulting Docker images digests with cosign
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3.1.1
      with:
        cosign-release: 'v2.1.1'

    - name: Sign container images
      if: github.event_name != 'pull_request'
      env:
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        TAGS_GHCR: ${{ steps.meta-ghcr.outputs.tags }}
        TAGS_DOCKERHUB: ${{ steps.meta-dockerhub.outputs.tags }}
        DIGEST_GHCR: ${{ steps.build-and-push-ghcr.outputs.digest }}
        DIGEST_DOCKERHUB: ${{ steps.build-and-push-dockerhub.outputs.digest }}
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: |
        echo "${TAGS_GHCR}" | xargs -I {} cosign sign --yes {}@${DIGEST_GHCR}
        echo "${TAGS_DOCKERHUB}" | xargs -I {} cosign sign --yes {}@${DIGEST_DOCKERHUB}

  # Test the published images
  test-published-images:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        registry: 
          - ghcr.io
          - docker.io
    
    steps:
    - name: Test published image
      run: |
        # Test that the image can be pulled and basic commands work
        docker run --rm ${{ matrix.registry }}/${{ github.repository }}:latest python3 --version
        docker run --rm ${{ matrix.registry }}/${{ github.repository }}:latest gdalinfo --version